name: On Pull Request Testing Workflow

on:
  pull_request:
    branches: [master]
    types: [opened, reopened, synchronize]

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label }}'
  cancel-in-progress: true

jobs:
  be-unit-tests:
    name: Unit Test and Build the Backend
    runs-on: ubuntu-latest
    if: always()
    defaults:
      run:
        working-directory: ./cdk/api
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node v16.x and Cache npm Dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
          cache-dependency-path: ./cdk/api/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Build and Test
        run: |
          npm run build
          npm run test

  e2e-tests:
    name: Run Playwright E2E Tests and Build the Frontend
    runs-on: ubuntu-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: ./web-ui
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node v16.x and Cache npm Dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
          cache-dependency-path: ./web-ui/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Retrieve Playwright Version
        id: playwright-version
        run: echo "::set-output name=version::`npm list @playwright/test | grep -m1 @playwright/test | awk -F'@' '{ print $NF }' | tr -d '"'`"

      # The cache key is automatically updated any time the Playwright package version
      # is updated in the package.json file, which will invalidate the cache, download
      # the latest Playwright browser binaries, and cache them again under the new key.
      - name: Cache Playwright Binaries
        uses: actions/cache@v3.0.4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: cache-playwright-browser-binaries-linux-${{ steps.playwright-version.outputs.version }}

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true' # Check to validate the cache is still valid or if it should be rebuilt
        run: npx playwright install

      - name: Install Playwright Dependencies, Build App and Run Playwright Tests
        run: |
          npx playwright install-deps
          npm run test:e2e:ci

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        if: always()
        with:
          name: playwright-report
          path: ./web-ui/e2e/playwright-report
          retention-days: 30
